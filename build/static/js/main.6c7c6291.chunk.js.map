{"version":3,"sources":["components/modal/ModalInfo.js","components/modal/ModalMap.js","components/modal/ModalWeather.js","components/modal/CityModal.js","components/City.js","services/aqicn.js","components/Cities.js","components/SearchBar.js","components/Footer.js","App.js","index.js"],"names":["ModalInfo","props","info","useState","aqi","city","url","link","className","pollutionLevel","href","target","rel","ModalMap","location","geo","lat","lng","center","zoom","maxZoom","attributionControl","zoomControl","doubleClickZoom","scrollWheelZoom","dragging","animate","easeLinearity","TileLayer","Marker","position","Popup","owmKey","process","ModalWeather","placeName","setPlaceName","temp","setTemp","weather","setWeather","useEffect","abortController","AbortController","signal","a","fetch","json","then","res","name","main","toFixed","catch","err","console","log","fetchData","abort","aqicnKey","CityModal","uid","modalOn","setModalOn","setInfo","toggleModal","data","Button","type","onClick","Modal","isOpen","toggle","size","aria-labelledby","centered","ModalHeader","ModalBody","ModalFooter","color","City","station","Fragment","search","Cities","results","setResults","aqicn","map","item","key","SearchBar","setSearch","isEmpty","setIsEmpty","document","querySelector","focus","length","value","onChange","e","preventDefault","placeholder","aria-label","Footer","App","title","description","canonical","meta","charset","keywords","rootElement","getElementById","ReactDOM","render"],"mappings":"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","file":"static/js/main.6c7c6291.chunk.js","sourcesContent":["import React, { useState } from \"react\";\n\nconst ModalInfo = props => {\n  const { info } = props;\n\n  const [aqi] = useState(info.aqi);\n  const [link] = useState(info.city.url);\n\n  const pollutionLevel = aqi => {\n    if (aqi < 50) {\n      return \"bg-success\";\n    }\n    if (aqi >= 50 && aqi < 100) {\n      return \"bg-warning\";\n    }\n    if (aqi >= 100 && aqi < 150) {\n      return \"bg-orange\";\n    }\n    if (aqi >= 150) {\n      return \"bg-danger\";\n    }\n  };\n\n  return (\n    <div className=\"d-flex flex-column justify-content-between w-100 h-100\">\n      <h3>\n        AQI: <span className={pollutionLevel(aqi)}>{aqi}</span>\n      </h3>\n      <a\n        href={link}\n        className=\"btn btn-success mb-4\"\n        target=\"_blank\"\n        rel=\"noopener noreferrer\"\n      >\n        View more air quality data at aqicn.org\n      </a>\n    </div>\n  );\n};\n\nexport default ModalInfo;\n","import React, { useState } from \"react\";\n\nimport { Map as LeafletMap, TileLayer, Marker, Popup } from \"react-leaflet\";\n\nconst ModalMap = props => {\n  const { info, location } = props;\n\n  const [lat] = useState(info.city.geo[0]);\n  const [lng] = useState(info.city.geo[1]);\n\n  return (\n    <LeafletMap\n      center={[lat, lng]}\n      zoom={7}\n      maxZoom={14}\n      attributionControl={true}\n      zoomControl={true}\n      doubleClickZoom={true}\n      scrollWheelZoom={true}\n      dragging={true}\n      animate={true}\n      easeLinearity={0.35}\n    >\n      <TileLayer url=\"https://{s}.tile.osm.org/{z}/{x}/{y}.png\" />\n      <Marker position={[lat, lng]}>\n        <Popup>{location}</Popup>\n      </Marker>\n    </LeafletMap>\n  );\n};\n\nexport default ModalMap;\n","import React, { useState, useEffect } from \"react\";\n\nconst owmKey = process.env.REACT_APP_OWM_KEY;\n\nconst ModalWeather = props => {\n  const { info } = props;\n\n  const [lat] = useState(info.city.geo[0]);\n  const [lng] = useState(info.city.geo[1]);\n\n  const [placeName, setPlaceName] = useState(\"\");\n  const [temp, setTemp] = useState(\"\");\n  const [weather, setWeather] = useState(\"\");\n\n  useEffect(() => {\n    // memory leak cleanup\n    const abortController = new AbortController();\n    const signal = abortController.signal;\n\n    async function fetchData() {\n      const res = await fetch(\n        `https://api.openweathermap.org/data/2.5/weather?lat=${lat}&lon=${lng}&id=524901&APPID=${owmKey}`,\n        { signal: signal }\n      );\n      res\n        .json()\n        .then(res => {\n          setPlaceName(res.name);\n          setTemp((res.main.temp - 273.15).toFixed(1));\n          setWeather(res.weather[0].main);\n        })\n        .catch(err => {\n          console.log(err);\n        });\n    }\n    fetchData();\n\n    return function cleanup() {\n      abortController.abort();\n    };\n  }, [lat, lng]);\n\n  return (\n    <div className=\"card\">\n      <div className=\"card-body\">\n        <h3>Weather for {placeName}:</h3>\n        <h4>{weather}</h4>\n        <h4>Temperature: {temp} Â°C</h4>\n      </div>\n    </div>\n  );\n};\n\nexport default ModalWeather;\n","import React, { useEffect, useState } from \"react\";\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from \"reactstrap\";\nimport ModalInfo from \"./ModalInfo\";\nimport ModalMap from \"./ModalMap\";\nimport ModalWeather from \"./ModalWeather\";\n\nconst aqicnKey = process.env.REACT_APP_AQICN_KEY;\n\nconst CityModal = props => {\n  const { location, uid } = props;\n\n  const [modalOn, setModalOn] = useState(false);\n\n  const [info, setInfo] = useState({});\n\n  const toggleModal = () => {\n    setModalOn(modalOn => !modalOn);\n  };\n\n  useEffect(() => {\n    // memory leak cleanup\n    const abortController = new AbortController();\n    const signal = abortController.signal;\n\n    async function fetchData() {\n      const res = await fetch(\n        `https://api.waqi.info/feed/@${uid}/?token=${aqicnKey}`,\n        { signal: signal }\n      );\n      res\n        .json()\n        .then(res => {\n          setInfo(res.data);\n        })\n        .catch(err => {\n          console.log(err);\n        });\n    }\n    fetchData();\n    return function cleanup() {\n      abortController.abort();\n    };\n  }, [modalOn, uid]);\n\n  return (\n    <div>\n      <Button type=\"button\" onClick={toggleModal} className=\"btn btn-primary\">\n        Details\n      </Button>\n\n      <Modal\n        isOpen={modalOn}\n        toggle={toggleModal}\n        size=\"lg\"\n        aria-labelledby=\"contained-modal-title-vcenter\"\n        centered\n      >\n        <ModalHeader toggle={toggleModal}>{location}</ModalHeader>\n        <ModalBody>\n          <div className=\"container\">\n            <div className=\"row\">\n              <div className=\"col\">\n                <ModalInfo info={info} />\n              </div>\n              <div className=\"col-6\">\n                <ModalMap info={info} />\n              </div>\n            </div>\n            <hr />\n            <div className=\"bg-primary\">\n              <ModalWeather info={info} location={location} />\n            </div>\n          </div>\n        </ModalBody>\n        <ModalFooter>\n          <Button color=\"danger\" onClick={toggleModal}>\n            <i className=\"fas fa-long-arrow-alt-left\"></i> Go Back\n          </Button>\n        </ModalFooter>\n      </Modal>\n    </div>\n  );\n};\n\nexport default CityModal;\n","import React, { useState } from \"react\";\n\nimport CityModal from \"./modal/CityModal\";\nimport PropTypes from \"prop-types\";\n\nconst City = props => {\n  const { station } = props;\n\n  const [location] = useState(station);\n\n  const pollutionLevel = aqi => {\n    if (aqi < 50) {\n      return \"bg-success\";\n    }\n    if (aqi >= 50 && aqi < 100) {\n      return \"bg-warning\";\n    }\n    if (aqi >= 100 && aqi < 150) {\n      return \"bg-orange\";\n    }\n    if (aqi >= 150 && aqi < 200) {\n      return \"bg-danger text-white\";\n    }\n    if (aqi >= 200 && aqi < 300) {\n      return \"bg-purple text-white\";\n    }\n    if (aqi >= 300) {\n      return \"bg-darkred text-white\";\n    }\n  };\n\n  return (\n    <React.Fragment className=\"aqi-scale\">\n      {location.aqi !== \"-\" && (\n        <div className={`card my-3 mx-3 ${pollutionLevel(location.aqi)}`}>\n          <h2 className=\"card-header\">{location.station.name}</h2>\n          <div className=\"card-body\">\n            <h3 className=\"card-title\">\n              AQI:{\" \"}\n              <span className={pollutionLevel(location.aqi)}>\n                {location.aqi}\n              </span>\n            </h3>\n            <p className=\"card-text\">Station ID: {location.uid}</p>\n            <CityModal location={location.station.name} uid={location.uid} />\n          </div>\n        </div>\n      )}\n    </React.Fragment>\n  );\n};\n\n// To be used for testing\nCity.propTypes = {\n  station: PropTypes.shape({\n    aqi: PropTypes.string,\n    station: PropTypes.shape({\n      geo: PropTypes.arrayOf(PropTypes.number),\n      name: PropTypes.string,\n      url: PropTypes.string\n    }),\n    time: PropTypes.shape({\n      stime: PropTypes.string,\n      tz: PropTypes.string,\n      vtime: PropTypes.number\n    }),\n    uid: PropTypes.number\n  }).isRequired\n};\n\nexport default City;\n","const aqicnKey = process.env.REACT_APP_AQICN_KEY;\n\nexport default async (search, signal) => {\n  const res = await fetch(\n    `https://api.waqi.info/search/?token=${aqicnKey}&keyword=${search}`,\n    { signal: signal }\n  );\n\n  return res;\n};\n","import React, { useEffect, useState } from \"react\";\nimport City from \"./City\";\nimport aqicn from \"../services/aqicn\";\n\nconst Cities = props => {\n  const { search } = props;\n\n  const [results, setResults] = useState([]);\n\n  useEffect(() => {\n    // memory leak cleanup\n    const abortController = new AbortController();\n    const signal = abortController.signal;\n\n    async function fetchData() {\n      const response = await aqicn(search, signal);\n\n      response.json().then(res => {\n        setResults(res.data);\n      });\n    }\n    fetchData();\n\n    return function cleanup() {\n      abortController.abort();\n    };\n  }, [search]);\n\n  return (\n    <React.Fragment>\n      {results !== [] && (\n        <div>\n          <p className=\"d-sm-none px-4 mt-3 d-flex justify-content-center\">\n            <a\n              href=\"http://aqicn.org/scale/\"\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n            >\n              What do these levels mean?\n            </a>\n          </p>\n          <p className=\"d-none d-sm-block px-4 mt-3\">\n            <a\n              href=\"http://aqicn.org/scale/\"\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n            >\n              What do these levels mean?\n            </a>\n          </p>\n        </div>\n      )}\n      {results !== [] &&\n        results.map(item => <City key={item.uid} station={item} />)}\n    </React.Fragment>\n  );\n};\n\nexport default Cities;\n","import React, { useState, useEffect } from \"react\";\nimport Cities from \"./Cities\";\n\nconst SearchBar = () => {\n  const [search, setSearch] = useState(\"\");\n  const [isEmpty, setIsEmpty] = useState(true);\n\n  const handleChange = e => {\n    e.preventDefault();\n    setSearch(e.target.value);\n  };\n\n  useEffect(() => {\n    document.querySelector(\".form-control\").focus();\n\n    if (search.length < 3) {\n      setIsEmpty(true);\n    } else if (search.length >= 3) {\n      setIsEmpty(false);\n    }\n  }, [search]);\n\n  return (\n    <React.Fragment>\n      <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\n        <div className=\"navbar-brand mx-auto d-sm-none\">cleanAirMap</div>\n        <form className=\"form-group my-2 col-sm-4 \">\n          <input\n            className=\"form-control input-lg\"\n            type=\"text\"\n            value={search}\n            onChange={handleChange}\n            placeholder=\"Enter a City...\"\n            aria-label=\"Search\"\n          ></input>\n        </form>\n        <div className=\"navbar-brand ml-auto d-none d-sm-block\">\n          cleanAirMap\n        </div>\n      </nav>\n\n      {search.length >= 3 && <Cities search={search} isEmpty={isEmpty} />}\n    </React.Fragment>\n  );\n};\n\nexport default SearchBar;\n","import React from \"react\";\n\nconst Footer = () => {\n  return (\n    <div>\n      <footer className=\"page-footer pt-2 text-center border-top\">\n        <p className=\"mt-3\">Search for any city's Air Quality Index.</p>\n        <p>\n          Try searching for Toronto, Paris, Beijing, New Delhi, or anywhere in\n          between.\n        </p>\n        <hr className=\"w-25\" />\n\n        <div className=\"footer-copyright text-center py-1\">\n          AQI Data Provided by <a href=\"https://aqicn.org/\">aqicn.org</a>\n        </div>\n        <div className=\"footer-copyright text-center py-1\">\n          Weather Data Provided by{\" \"}\n          <a href=\"https://openweathermap.org\">OpenWeatherMap.org</a>\n        </div>\n        <div className=\"footer-copyright text-center py-1\">\n          Created by <i className=\"fab fa-twitter\" />{\" \"}\n          <a href=\"https://twitter.com/dvtShea\">Shea de Vries-Thomas</a>\n        </div>\n        <div className=\"footer-copyright text-center py-1\">\n          <a\n            href=\"https://github.com/dvtShea/cleanAirMap\"\n            className=\"btn btn-secondary btn-sm\"\n          >\n            <i className=\"fab fa-github\" /> View Source Code on Github\n          </a>\n        </div>\n      </footer>\n    </div>\n  );\n};\n\nexport default Footer;\n","import React from \"react\";\nimport DocumentMeta from \"react-document-meta\";\nimport \"./App.css\";\nimport SearchBar from \"./components/SearchBar\";\nimport Footer from \"./components/Footer\";\n\nconst App = () => {\n  const meta = {\n    title: \"cleanAirMap\",\n    description:\n      \"React app that fetches air quality data for a queried city. Displays a map as well as weather data for the selected city's coordinates. UI created with Bootstrap.\",\n    canonical: \"https://cleanairmap.netlify.com/\",\n    meta: {\n      charset: \"utf-8\",\n      name: {\n        keywords: \"react,meta,document,html,tags\"\n      }\n    }\n  };\n\n  return (\n    <div>\n      <DocumentMeta {...meta} />\n\n      <SearchBar />\n      <Footer />\n    </div>\n  );\n};\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(<App />, rootElement);\n"],"sourceRoot":""}